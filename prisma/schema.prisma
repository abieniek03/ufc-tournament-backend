// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Sex {
  MALE
  FEMALE
}

model Weightclass {
  id        String    @id @unique
  name      String
  sex       Sex
  limit     Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Fighter   Fighter[]

  @@map("weightclasses")
}

model Fighter {
  id              String            @id @unique
  firstName       String
  lastName        String
  nickname        String
  birthDate       DateTime
  sex             Sex
  nationality     String
  nationalityId   String
  city            String
  weightclassId   String
  win             Int
  lose            Int
  draw            Int
  noContest       Int
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  Weightclass     Weightclass?      @relation(fields: [weightclassId], references: [id])
  Ranking         Ranking[]
  TournamentScore TournamentScore[]

  @@map("fighters")
}

model Ranking {
  fighterId        String   @id @unique
  weightclassId    String
  position         Int
  positionPrevious Int?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  Fighter          Fighter? @relation(fields: [fighterId], references: [id])

  @@map("rankings")
}

model Tournament {
  id              String            @id @default(uuid())
  name            String
  weightclassId   String
  fighters        Int
  userId          String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  TournamentScore TournamentScore[]

  @@map("tournaments")
}

model TournamentScore {
  id                String      @id @default(uuid())
  userId            String
  tournamentId      String
  fighterId         String
  ranking           Int
  win               Int         @default(0)
  lose              Int         @default(0)
  draw              Int         @default(0)
  firstRoundFinish  Int         @default(0)
  secondRoundFinish Int         @default(0)
  thirdRoundFinish  Int         @default(0)
  points            Int         @default(0)
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  Tournament        Tournament? @relation(fields: [tournamentId], references: [id])
  Fighter           Fighter?    @relation(fields: [fighterId], references: [id])

  @@map("tournaments-scores")
}
